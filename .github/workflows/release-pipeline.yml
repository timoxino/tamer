name: Build, Test, Image and Deploy

on:
  push:
    branches: [ "release/**" ]
    tags:
      - 'v*'

env:
  PROJECT_ID: timoxino
  GAR_LOCATION: us-central1-docker.pkg.dev
  SERVICE: tamer
  APPLICATION: interview
  REGION: us-central1

jobs:
  
  build-and-deploy:
    permissions:
      contents: 'read'
      id-token: 'write'
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      - name: Google Auth
        id: auth
        uses: 'google-github-actions/auth@v0'
        with:
          token_format: 'access_token'
          workload_identity_provider: '${{ secrets.WIF_PROVIDER }}'
          service_account: '${{ secrets.WIF_SERVICE_ACCOUNT }}'

      - name: Build with Maven
        run: mvn -B package --file pom.xml

      - name: Docker Auth
        id: docker-auth
        uses: 'docker/login-action@v1'
        with:
          username: 'oauth2accesstoken'
          password: '${{ steps.auth.outputs.access_token }}'
          registry: '${{ env.GAR_LOCATION }}'

      - name: Build and Push Container
        run: |-
          docker build -t "${{ env.GAR_LOCATION }}/${{ env.PROJECT_ID }}/${{ env.APPLICATION }}/${{ env.SERVICE }}" ./
          docker push "${{ env.GAR_LOCATION }}/${{ env.PROJECT_ID }}/${{ env.APPLICATION }}/${{ env.SERVICE }}"

      - name: Deploy to Cloud Run
        id: deploy
        uses: google-github-actions/deploy-cloudrun@v0
        with:
          service: ${{ env.SERVICE }}
          region: ${{ env.REGION }}
          image: ${{ env.GAR_LOCATION }}/${{ env.PROJECT_ID }}/${{ env.APPLICATION }}/${{ env.SERVICE }}
          env_vars: |
            spring.profiles.active=cloudrun
          flags: '--min-instances=1 --max-instances=1'

      - name: Show Output
        run: echo ${{ steps.deploy.outputs.url }}
